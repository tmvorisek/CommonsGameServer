-- first execute:
-- sudo service postgresql initdb
-- sudo service postgresql start
-- psql
-- ALTER USER postgres WITH PASSWORD 'pass123';

DROP TABLE IF EXISTS login CASCADE;
DROP TABLE IF EXISTS game CASCADE;
DROP TABLE IF EXISTS move CASCADE;
DROP TABLE IF EXISTS player CASCADE;
DROP TABLE IF EXISTS chat CASCADE;
DROP TABLE IF EXISTS round CASCADE;
DROP TABLE IF EXISTS rule CASCADE;
DROP TABLE IF EXISTS vote CASCADE;

CREATE TABLE IF NOT EXISTS game (
    id SERIAL UNIQUE NOT NULL PRIMARY KEY,
    resource INT DEFAULT 100
);

CREATE TABLE IF NOT EXISTS round (
	id SERIAL UNIQUE NOT NULL PRIMARY KEY,
	commons_index INT NOT NULL,
	game_id INT NOT NULL REFERENCES game(id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS player (
    id SERIAL UNIQUE NOT NULL PRIMARY KEY,
    game_id INT NOT NULL REFERENCES game(id) ON DELETE CASCADE,
    round_id INT NOT NULL REFERENCES round(id) ON DELETE CASCADE,
    name VARCHAR(255) NOT NULL,
    worth INT NOT NULL,
    password VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS chat (
    id SERIAL UNIQUE NOT NULL PRIMARY KEY,
    player_id INT NOT NULL REFERENCES player(id) ON DELETE CASCADE,
    text VARCHAR(1024) NOT NULL,
    time TIMESTAMP DEFAULT current_timestamp,
    game_id INT NOT NULL REFERENCES game(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS move (
    id SERIAL UNIQUE NOT NULL PRIMARY KEY,
    player_id INT NOT NULL REFERENCES player(id) ON DELETE CASCADE,
    game_id INT NOT NULL REFERENCES game(id) ON DELETE CASCADE,
    harvest VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS login (
    player_id INT NOT NULL REFERENCES player(id) ON DELETE CASCADE,
    login_time TIMESTAMP DEFAULT current_timestamp,
    logout_time TIMESTAMP
);

CREATE TABLE IF NOT EXISTS rule (
	id SERIAL UNIQUE NOT NULL PRIMARY KEY,
	player_id INT NOT NULL REFERENCES player(id) ON DELETE CASCADE,
    game_id INT NOT NULL REFERENCES game(id) ON DELETE CASCADE,
    passed BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS vote (
	id SERIAL UNIQUE NOT NULL PRIMARY KEY,
	player_id INT NOT NULL REFERENCES player(id) ON DELETE CASCADE,
	rule_id INT NOT NULL REFERENCES rule(id) ON DELETE CASCADE,
	vote BOOLEAN NOT NULL
);